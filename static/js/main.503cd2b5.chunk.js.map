{"version":3,"sources":["redux/ducks/poke_ducks/index.js","components/Home.js","components/SecondPage.js","components/ThirdPage.js","components/FourthPage.js","components/FifthPage.js","components/SixthPage.js","components/SeventhPage.js","components/EighthPage.js","components/NinthPage.js","components/TenthPage.js","components/EleventhPage.js","components/TwelfthPage.js","components/ThirteenthPage.js","components/App.js","serviceWorker.js","redux/store.js","index.js"],"names":["initialState","allPokemon","secondSet","thirdSet","fourthSet","fifthSet","sixthSet","seventhSet","eighthSet","ninthSet","tenthSet","eleventhSet","twelfthSet","thirteenthSet","stats","state","action","type","payload","usePokemon","dispatch","useDispatch","pokeMon","useSelector","appState","pokeState","pokeMon2","pokeMon3","pokeMon4","pokeMon5","pokeMon6","pokeMon7","pokeMon8","pokeMon9","pokeMon10","pokeMon11","pokeMon12","pokeMon13","pokeStats","useEffect","axios","get","then","resp","data","pushName","pokeName","post","pushPokeName","Pokemons","useState","show","setShow","handleShow","handleClose","className","map","animal","onClick","e","name","id","key","Button","variant","Modal","onHide","centered","size","Header","Title","Body","Container","Row","Col","md","src","img","alt","height","weight","types","abilities","Footer","to","App","basename","exact","path","component","Home","SecondPage","ThirdPage","FourthPage","FifthPage","SixthPage","SeventhPage","EighthPage","NinthPage","TenthPage","EleventhPage","TwelfthPage","ThirteenthPage","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","reducers","enhancer","applyMiddleware","thunk","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.503cd2b5.chunk.js","sourcesContent":["//imported dependencies\nimport { useSelector, useDispatch } from \"react-redux\"\nimport axios from \"axios\"\nimport { useEffect } from \"react\"\n\nconst GET_POKEMON = \"pokemon/GET_POKEMON\"\nconst GET_POKEMON_2 = \"pokemon/GET_POKEMON_2\"\nconst GET_POKEMON_3 = \"pokemon/GET_POKEMON_3\"\nconst GET_POKEMON_4 = \"pokemon/GET_POKEMON_4\"\nconst GET_POKEMON_5 = \"pokemon/GET_POKEMON_5\"\nconst GET_POKEMON_6 = \"pokemon/GET_POKEMON_6\"\nconst GET_POKEMON_7 = \"pokemon/GET_POKEMON_7\"\nconst GET_POKEMON_8 = \"pokemon/GET_POKEMON_8\"\nconst GET_POKEMON_9 = \"pokemon/GET_POKEMON_9\"\nconst GET_POKEMON_10 = \"pokemon/GET_POKEMON_10\"\nconst GET_POKEMON_11 = \"pokemon/GET_POKEMON_11\"\nconst GET_POKEMON_12 = \"pokemon/GET_POKEMON_12\"\nconst GET_POKEMON_13 = \"pokemon/GET_POKEMON_13\"\n\nconst GET_STATS = \"pokemon/GET_STATS\"\nconst SET_POKESTATS = \"pokemon/SET_POKESTATS\"\n\n//setting inital state of pokemon calls to an empty array && stats as an empty object\nconst initialState = {\n  allPokemon: [],\n  secondSet: [],\n  thirdSet: [],\n  fourthSet: [],\n  fifthSet: [],\n  sixthSet: [],\n  seventhSet: [],\n  eighthSet: [],\n  ninthSet: [],\n  tenthSet: [],\n  eleventhSet: [],\n  twelfthSet: [],\n  thirteenthSet: [],\n  stats: {},\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POKEMON:\n      return { ...state, allPokemon: action.payload }\n\n    case GET_POKEMON_2:\n      return { ...state, secondSet: action.payload }\n\n    case GET_POKEMON_3:\n      return { ...state, thirdSet: action.payload }\n\n    case GET_POKEMON_4:\n      return { ...state, fourthSet: action.payload }\n\n    case GET_POKEMON_5:\n      return { ...state, fifthSet: action.payload }\n    \n    case GET_POKEMON_6:\n      return { ...state, sixthSet: action.payload }\n\n    case GET_POKEMON_7:\n      return { ...state, seventhSet: action.payload }\n\n    case GET_POKEMON_8:\n      return { ...state, eighthSet: action.payload }\n\n    case GET_POKEMON_9:\n      return { ...state, ninthSet: action.payload }\n\n    case GET_POKEMON_10:\n      return { ...state, tenthSet: action.payload }\n\n    case GET_POKEMON_11:\n      return { ...state, eleventhSet: action.payload }\n\n    case GET_POKEMON_12:\n      return { ...state, twelfthSet: action.payload }\n\n    case GET_POKEMON_13:\n      return { ...state, thirteenthSet: action.payload }\n\n    case SET_POKESTATS:\n      return { ...state, stats: action.payload}\n\n    case GET_STATS:\n      return { ...state, stats: action.payload}\n\n    default:\n      return state\n  }\n}\n\n//grabs first set of pokemon from the API\nfunction getPokemon() {\n  return dispatch => {\n    axios.get(\"/api/pokemonone\").then(resp => {\n      dispatch({\n        type: GET_POKEMON,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs second set of pokemon from the API\nfunction getPokemonTwo() {\n  return dispatch => {\n    axios.get(\"/api/pokemontwo\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_2,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs third set of pokemon from the API\nfunction getPokemonThree() {\n  return dispatch => {\n    axios.get(\"/api/pokemonthree\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_3,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs fourth set of pokemon from the API\nfunction getPokemonFour() {\n  return dispatch => {\n    axios.get(\"/api/pokemonfour\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_4,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs fifth set of pokemon from the API\nfunction getPokemonFive() {\n  return dispatch => {\n    axios.get(\"/api/pokemonfive\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_5,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs sixth set of pokemon from the API\nfunction getPokemonSix() {\n  return dispatch => {\n    axios.get(\"/api/pokemonsix\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_6,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs seventh set of pokemon from the API\nfunction getPokemonSeven() {\n  return dispatch => {\n    axios.get(\"/api/pokemonseven\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_7,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs eighth set of pokemon from the API\nfunction getPokemonEight() {\n  return dispatch => {\n    axios.get(\"/api/pokemoneight\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_8,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs ninth set of pokemon from the API\nfunction getPokemonNine() {\n  return dispatch => {\n    axios.get(\"/api/pokemonnine\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_9,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs tenth set of pokemon from the API\nfunction getPokemonTen() {\n  return dispatch => {\n    axios.get(\"/api/pokemonten\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_10,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs eleventh set of pokemon from the API\nfunction getPokemonEleven() {\n  return dispatch => {\n    axios.get(\"/api/pokemoneleven\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_11,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs twelfth set of pokemon from the API\nfunction getPokemonTwelve() {\n  return dispatch => {\n    axios.get(\"/api/pokemontwelve\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_12,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//grabs twelfth set of pokemon from the API\nfunction getPokemonThirteen() {\n  return dispatch => {\n    axios.get(\"/api/pokemonthirteen\").then(resp => {\n      dispatch({\n        type: GET_POKEMON_13,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n//function grabs pokemon and pushes it to the backend to pull in specific stats for a pokemon\nfunction pushPokeName(pokeName) {\n  return dispatch => {\n    axios.post(\"/api/pokename\", { pokeName }).then(resp => {\n      dispatch({\n        type: SET_POKESTATS,\n        payload: resp.data\n      })\n    })\n  }\n}\n\n\n//function for custom hook\nexport function usePokemon() {\n  const dispatch = useDispatch()\n\n  const pokeMon = useSelector(appState => appState.pokeState.allPokemon)\n\n  const pokeMon2 = useSelector(appState => appState.pokeState.secondSet)\n\n  const pokeMon3 = useSelector(appState => appState.pokeState.thirdSet)\n\n  const pokeMon4 = useSelector(appState => appState.pokeState.fourthSet)\n\n  const pokeMon5 = useSelector(appState => appState.pokeState.fifthSet)\n\n  const pokeMon6 = useSelector(appState => appState.pokeState.sixthSet)\n\n  const pokeMon7 = useSelector(appState => appState.pokeState.seventhSet)\n\n  const pokeMon8 = useSelector(appState => appState.pokeState.eighthSet)\n\n  const pokeMon9 = useSelector(appState => appState.pokeState.ninthSet)\n\n  const pokeMon10 = useSelector(appState => appState.pokeState.tenthSet)\n\n  const pokeMon11 = useSelector(appState => appState.pokeState.eleventhSet)\n\n  const pokeMon12 = useSelector(appState => appState.pokeState.twelfthSet)\n\n  const pokeMon13 = useSelector(appState => appState.pokeState.thirteenthSet)\n\n  const pokeStats = useSelector(appState => appState.pokeState.stats)\n\n  const pushName = pokeName => dispatch(pushPokeName(pokeName))\n\n\n  useEffect(() => {\n    dispatch(getPokemon())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonTwo())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonThree())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonFour())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonFive())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonSix())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonSeven())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonEight())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonNine())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonTen())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonEleven())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonTwelve())\n  }, [dispatch])\n\n  useEffect(() => {\n    dispatch(getPokemonThirteen())\n  }, [dispatch])\n\n  return {\n    pokeMon,\n    pokeMon2,\n    pokeMon3,\n    pokeMon4,\n    pokeMon5,\n    pokeMon6,\n    pokeMon7,\n    pokeMon8,\n    pokeMon9,\n    pokeMon10,\n    pokeMon11,\n    pokeMon12,\n    pokeMon13,\n    pokeStats,\n    pushName\n  }\n}\n","//imported dependecies\nimport React, { useState } from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependecies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n          <span className=\"active\">1</span>\n\n          <Link to={\"/page2\"}>\n            <span>2</span>\n          </Link>\n\n          <Link to={\"/page3\"}>\n            <span>3</span>\n          </Link>\n\n          <Link to={\"/page4\"}>\n            <span>4</span>\n          </Link>\n\n          <Link to={\"/page5\"}>\n            <span>5</span>\n          </Link>\n\n          <Link to={\"/page6\"}>\n            <span>6</span>\n          </Link>\n\n          <Link to={\"/page7\"}>\n            <span>7</span>\n          </Link>\n\n          <Link to={\"/page8\"}>\n            <span>8</span>\n          </Link>\n\n          <Link to={\"/page9\"}>\n            <span>9</span>\n          </Link>\n\n          <Link to={\"/page10\"}>\n            <span>10</span>\n          </Link>\n\n          <Link to={\"/page11\"}>\n            <span>11</span>\n          </Link>\n\n          <Link to={\"/page12\"}>\n            <span>12</span>\n          </Link>\n          \n          <Link to={\"/page13\"}>\n            <span>13</span>\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependecies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon2, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n\n        {pokeMon2.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <span className=\"active\">2</span>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependecies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon3, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon3.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <span className=\"active\">3</span>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependencies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon4, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon4.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/*button to show Modal*/}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n            \n            <span className=\"active\">4</span>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependecies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n\n//imported dependencies for Bootstap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon5, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon5.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <span className=\"active\">5</span>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependecies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependecies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon6, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon6.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <span className=\"active\">6</span>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependencies for Bootsrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon7, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon7.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <span className=\"active\">7</span>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependencies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon8, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon8.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/*button to show Modal*/}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <span className=\"active\">8</span>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n\n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependecies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependencies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon9, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon9.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <span className=\"active\">9</span>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependecies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependencies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon10, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon10.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <span className=\"active\">10</span>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependencies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon11, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon11.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/*button to show Modal*/}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`}  className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <span className=\"active\">11</span>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependencies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon12, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon12.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <span className=\"active\">12</span>\n            \n            <Link to={\"/page13\"}>\n              <span>13</span>\n            </Link>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React, {useState} from \"react\"\nimport { Link } from \"react-router-dom\"\n\n//imported dependecies for Bootstrap Modal\nimport Modal from \"react-bootstrap/Modal\"\nimport Container from \"react-bootstrap/Container\"\nimport Button from \"react-bootstrap/Button\"\nimport { Col, Row } from \"react-bootstrap\"\n\n//imported stylesheets\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../styles/base.css';\nimport \"../styles/home.css\"\n\n//imported hook\nimport { usePokemon } from \"../hooks\"\n\nexport default function Pokemons() {\n  const { pokeMon13, pushName, pokeStats } = usePokemon()\n\n  //show & set show are set to false for initial state, \n  const [show, setShow] = useState(false);\n  //when you click on the \"Button\" state is changed to TRUE to show modal\n  const handleShow = () => setShow(true);\n  //when you click \"close\" button inside of Modal, state is changed back to FALSE to hide modal\n  const handleClose = () => setShow(false);\n  \n  return (\n    <div>\n      <header>\n        <h1>Pokemon Library</h1>\n        <p>First Generation</p>\n      </header>\n\n      <div className=\"wrapper\">\n        {pokeMon13.map(animal => (\n          //onClick function is taking the pokemon name and calling the api to pull in its stats for display\n          <div onClick={e => pushName(animal.name)} id={animal.name} key={`${animal.name}`}>\n\n            {/* button to show modal */}\n            <Button className=\"pokemonButton\" variant=\"primary\" onClick={handleShow}>\n              <p>\n                {animal.name}\n              </p>\n            </Button>\n\n            <Modal show={show} onHide={handleClose} centered={true} size=\"sm\">\n              <Modal.Header className=\"pokename-title\">\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                  {pokeStats.name}\n                </Modal.Title>\n              </Modal.Header>\n\n              <Modal.Body>\n                <Container>\n                  <Row className=\"show-grid\">\n                    <Col md={12} className=\"modal-column\">\n                      <code>\n                        <img src={pokeStats.img} alt={`${pokeStats.name}`} className=\"pokeImg\"/>\n\n                        <ul>\n                          <li>\n                            <strong>Height: </strong> {pokeStats.height}\n                          </li>\n\n                          <li>\n                            <strong>Weight: </strong> {pokeStats.weight}\n                          </li>\n\n                          <li>\n                            <strong>Type(s): </strong> {pokeStats.types}\n                          </li>\n\n                          <li>\n                            <strong>Abilities: </strong> {pokeStats.abilities}\n                          </li>\n                        </ul>\n                      </code>\n                    </Col>\n                  </Row>\n                </Container>\n              </Modal.Body>\n\n              <Modal.Footer>\n                {/* button to close modal */}\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </div>\n        ))}\n\n        <div className=\"pagination\">\n            <Link to={\"/\"}>\n              <span>1</span>\n            </Link>\n\n            <Link to={\"/page2\"}>\n              <span>2</span>\n            </Link>\n\n            <Link to={\"/page3\"}>\n              <span>3</span>\n            </Link>\n\n            <Link to={\"/page4\"}>\n              <span>4</span>\n            </Link>\n\n            <Link to={\"/page5\"}>\n              <span>5</span>\n            </Link>\n\n            <Link to={\"/page6\"}>\n              <span>6</span>\n            </Link>\n\n            <Link to={\"/page7\"}>\n              <span>7</span>\n            </Link>\n\n            <Link to={\"/page8\"}>\n              <span>8</span>\n            </Link>\n\n            <Link to={\"/page9\"}>\n              <span>9</span>\n            </Link>\n\n            <Link to={\"/page10\"}>\n              <span>10</span>\n            </Link>\n\n            <Link to={\"/page11\"}>\n              <span>11</span>\n            </Link>\n\n            <Link to={\"/page12\"}>\n              <span>12</span>\n            </Link>\n            \n            <span className=\"active\">13</span>\n        </div>\n      </div>\n    </div>\n  )\n}","//imported dependencies\nimport React from \"react\"\nimport { BrowserRouter as Router, Route } from \"react-router-dom\"\n\n//imported components\nimport Home from \"./Home\"\nimport SecondPage from \"./SecondPage\"\nimport ThirdPage from \"./ThirdPage\"\nimport FourthPage from \"./FourthPage\"\nimport FifthPage from \"./FifthPage\"\nimport SixthPage from \"./SixthPage\"\nimport SeventhPage from \"./SeventhPage\"\nimport EighthPage from \"./EighthPage\"\nimport NinthPage from \"./NinthPage\"\nimport TenthPage from \"./TenthPage\"\nimport EleventhPage from \"./EleventhPage\"\nimport TwelfthPage from \"./TwelfthPage\"\nimport ThirteenthPage from \"./ThirteenthPage\"\n\nexport default function App() {\n\n  return (\n    <Router basename=\"https://girafffene.github.io/poke-library\">\n      {/* adding routes for pages */}\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/page2\" component={SecondPage} />\n      <Route exact path=\"/page3\" component={ThirdPage} />\n      <Route exact path=\"/page4\" component={FourthPage} />\n      <Route exact path=\"/page5\" component={FifthPage} />\n      <Route exact path=\"/page6\" component={SixthPage} />\n      <Route exact path=\"/page7\" component={SeventhPage} />\n      <Route exact path=\"/page8\" component={EighthPage} />\n      <Route exact path=\"/page9\" component={NinthPage} />\n      <Route exact path=\"/page10\" component={TenthPage} />\n      <Route exact path=\"/page11\" component={EleventhPage} />\n      <Route exact path=\"/page12\" component={TwelfthPage} />\n      <Route exact path=\"/page13\" component={ThirteenthPage} />\n    </Router>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\"\nimport thunk from \"redux-thunk\"\nimport * as reducers from \"./ducks\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst rootReducer = combineReducers(reducers)\nconst enhancer = composeEnhancers(applyMiddleware(thunk))\n\nconst store = createStore(rootReducer, enhancer)\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./styles/base.css\"\nimport App from \"./components/App\"\nimport * as serviceWorker from \"./serviceWorker\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}